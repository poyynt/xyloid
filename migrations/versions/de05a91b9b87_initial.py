"""initial

Revision ID: de05a91b9b87
Revises: 
Create Date: 2023-02-16 16:01:25.784023

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'de05a91b9b87'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('sqlite_sequence')
    op.drop_table('comments')
    with op.batch_alter_table('post_content', schema=None) as batch_op:
        batch_op.drop_index('post_content_id_index')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.add_column(sa.Column('author', sa.String(length=32), nullable=False))
        batch_op.alter_column('name',
               existing_type=sa.TEXT(length=256),
               type_=sa.String(length=256),
               existing_nullable=False)
        batch_op.alter_column('shortlink',
               existing_type=sa.TEXT(length=16),
               type_=sa.String(length=16),
               existing_nullable=True)
        batch_op.alter_column('uuid',
               existing_type=sa.TEXT(length=36),
               type_=sa.String(length=36),
               existing_nullable=False)
        batch_op.alter_column('created',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
        batch_op.drop_index('post_id_index')
        batch_op.create_unique_constraint(None, ['shortlink'])
        batch_op.create_unique_constraint(None, ['uuid'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.create_unique_constraint(None, ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')

    with op.batch_alter_table('posts', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='unique')
        batch_op.drop_constraint(None, type_='unique')
        batch_op.create_index('post_id_index', ['internal_id'], unique=False)
        batch_op.alter_column('created',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
        batch_op.alter_column('uuid',
               existing_type=sa.String(length=36),
               type_=sa.TEXT(length=36),
               existing_nullable=False)
        batch_op.alter_column('shortlink',
               existing_type=sa.String(length=16),
               type_=sa.TEXT(length=16),
               existing_nullable=True)
        batch_op.alter_column('name',
               existing_type=sa.String(length=256),
               type_=sa.TEXT(length=256),
               existing_nullable=False)
        batch_op.drop_column('author')

    with op.batch_alter_table('post_content', schema=None) as batch_op:
        batch_op.create_index('post_content_id_index', ['post_id'], unique=False)

    op.create_table('comments',
    sa.Column('comment_id', sa.INTEGER(), nullable=False),
    sa.Column('on_post', sa.INTEGER(), nullable=False),
    sa.Column('date', sa.DATE(), nullable=False),
    sa.Column('name', sa.TEXT(length=256), nullable=False),
    sa.Column('comment', sa.TEXT(length=2048), nullable=False),
    sa.Column('show', sa.BOOLEAN(), server_default=sa.text('(true)'), nullable=False),
    sa.ForeignKeyConstraint(['on_post'], ['posts.internal_id'], ),
    sa.PrimaryKeyConstraint('comment_id'),
    sa.UniqueConstraint('comment_id')
    )
    op.create_table('sqlite_sequence',
    sa.Column('name', sa.NullType(), nullable=True),
    sa.Column('seq', sa.NullType(), nullable=True)
    )
    # ### end Alembic commands ###
